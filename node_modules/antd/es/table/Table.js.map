{"version":3,"sources":["table/Table.jsx"],"names":["React","classNames","RcTable","INTERNAL_HOOKS","Spin","Pagination","ConfigContext","usePagination","DEFAULT_PAGE_SIZE","getPaginationParam","useLazyKVMap","useSelection","SELECTION_ALL","SELECTION_INVERT","useSorter","getSortData","useFilter","getFilterData","useTitleColumns","renderExpandIcon","scrollTo","defaultLocale","SizeContext","Column","ColumnGroup","EMPTY_LIST","Table","props","customizePrefixCls","prefixCls","className","customizeSize","size","bordered","dropdownPrefixCls","dataSource","pagination","rowSelection","rowKey","rowClassName","columns","children","onChange","getPopupContainer","loading","expandIcon","expandable","expandedRowRender","indentSize","childrenColumnName","scroll","sortDirections","locale","useContext","contextLocale","renderEmpty","direction","mergedSize","tableLocale","rawData","getPrefixCls","expandType","useMemo","some","item","internalRefs","body","useRef","getRowKey","record","getRecordByKey","changeEventInfo","triggerOnChange","info","reset","changeInfo","resetPagination","current","pageSize","scrollToFirstRowOnChange","getContainer","filters","sorter","currentDataSource","sorterStates","filterStates","onSorterChange","transformSorterColumns","sortStates","sorterTitleProps","getSorters","sortedData","onFilterChange","transformFilterColumns","getFilters","mergedData","columnTitleProps","transformTitleColumns","onPaginationChange","length","mergedPagination","pageData","total","currentPageData","slice","data","transformSelectionColumns","selectedKeySet","internalRowClassName","index","indent","mergedRowClassName","has","mergedExpandable","__PARENT_RENDER_ICON__","expandIconColumnIndex","transformColumns","useCallback","innerColumns","topPaginationNode","bottomPaginationNode","paginationSize","undefined","renderPagination","position","spinProps","spinning","wrapperClassNames","e","preventDefault","emptyText","defaultProps"],"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,OAAOC,aAAP,IAAwBC,iBAAxB,EAA2CC,kBAA3C,QAAqE,uBAArE;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,YAAP,IAAuBC,aAAvB,EAAsCC,gBAAtC,QAA8D,sBAA9D;AACA,OAAOC,SAAP,IAAoBC,WAApB,QAAuC,mBAAvC;AACA,OAAOC,SAAP,IAAoBC,aAApB,QAAyC,mBAAzC;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,gBAAP,MAA6B,cAA7B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,IAAMC,UAAU,GAAG,EAAnB;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAAA,MACCC,kBADD,GACmUD,KADnU,CACVE,SADU;AAAA,MACqBC,SADrB,GACmUH,KADnU,CACqBG,SADrB;AAAA,MACsCC,aADtC,GACmUJ,KADnU,CACgCK,IADhC;AAAA,MACqDC,QADrD,GACmUN,KADnU,CACqDM,QADrD;AAAA,MAC+DC,iBAD/D,GACmUP,KADnU,CAC+DO,iBAD/D;AAAA,MACkFC,UADlF,GACmUR,KADnU,CACkFQ,UADlF;AAAA,MAC8FC,UAD9F,GACmUT,KADnU,CAC8FS,UAD9F;AAAA,MAC0GC,YAD1G,GACmUV,KADnU,CAC0GU,YAD1G;AAAA,MACwHC,MADxH,GACmUX,KADnU,CACwHW,MADxH;AAAA,MACgIC,YADhI,GACmUZ,KADnU,CACgIY,YADhI;AAAA,MAC8IC,OAD9I,GACmUb,KADnU,CAC8Ia,OAD9I;AAAA,MACuJC,QADvJ,GACmUd,KADnU,CACuJc,QADvJ;AAAA,MACiKC,QADjK,GACmUf,KADnU,CACiKe,QADjK;AAAA,MAC2KC,iBAD3K,GACmUhB,KADnU,CAC2KgB,iBAD3K;AAAA,MAC8LC,OAD9L,GACmUjB,KADnU,CAC8LiB,OAD9L;AAAA,MACuMC,UADvM,GACmUlB,KADnU,CACuMkB,UADvM;AAAA,MACmNC,UADnN,GACmUnB,KADnU,CACmNmB,UADnN;AAAA,MAC+NC,iBAD/N,GACmUpB,KADnU,CAC+NoB,iBAD/N;AAAA,MACkPC,UADlP,GACmUrB,KADnU,CACkPqB,UADlP;AAAA,8BACmUrB,KADnU,CAC8PsB,kBAD9P;AAAA,MAC8PA,kBAD9P,sCACmR,UADnR;AAAA,MAC+RC,MAD/R,GACmUvB,KADnU,CAC+RuB,MAD/R;AAAA,MACuSC,cADvS,GACmUxB,KADnU,CACuSwB,cADvS;AAAA,MACuTC,MADvT,GACmUzB,KADnU,CACuTyB,MADvT;AAElB,MAAMpB,IAAI,GAAGhC,KAAK,CAACqD,UAAN,CAAiB/B,WAAjB,CAAb;;AAFkB,0BAGwDtB,KAAK,CAACqD,UAAN,CAAiB/C,aAAjB,CAHxD;AAAA,gDAGV8C,MAHU;AAAA,MAGFE,aAHE,sCAGcjC,aAHd;AAAA,MAG6BkC,WAH7B,qBAG6BA,WAH7B;AAAA,MAG0CC,SAH1C,qBAG0CA,SAH1C;;AAIlB,MAAMC,UAAU,GAAG1B,aAAa,IAAIC,IAApC;;AACA,MAAM0B,WAAW,GAAG,SAAc,SAAc,EAAd,EAAkBJ,aAAa,CAAC5B,KAAhC,CAAd,EAAsD0B,MAAtD,CAApB;;AACA,MAAMO,OAAO,GAAGxB,UAAU,IAAIV,UAA9B;;AANkB,2BAOOzB,KAAK,CAACqD,UAAN,CAAiB/C,aAAjB,CAPP;AAAA,MAOVsD,YAPU,sBAOVA,YAPU;;AAQlB,MAAM/B,SAAS,GAAG+B,YAAY,CAAC,OAAD,EAAUhC,kBAAV,CAA9B;AACA,MAAMiC,UAAU,GAAG7D,KAAK,CAAC8D,OAAN,CAAc,YAAM;AACnC,QAAIH,OAAO,CAACI,IAAR,CAAa,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACf,kBAAD,CAAR;AAAA,KAAjB,CAAJ,EAAoD;AAChD,aAAO,MAAP;AACH;;AACD,QAAIF,iBAAiB,IAAKD,UAAU,IAAIA,UAAU,CAACC,iBAAnD,EAAuE;AACnE,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH,GARkB,EAQhB,CAACY,OAAD,CARgB,CAAnB;AASA,MAAMM,YAAY,GAAG;AACjBC,IAAAA,IAAI,EAAElE,KAAK,CAACmE,MAAN;AADW,GAArB,CAlBkB,CAqBlB;;AACA,MAAMC,SAAS,GAAGpE,KAAK,CAAC8D,OAAN,CAAc,YAAM;AAClC,QAAI,OAAOxB,MAAP,KAAkB,UAAtB,EAAkC;AAC9B,aAAOA,MAAP;AACH;;AACD,WAAO,UAAC+B,MAAD;AAAA,aAAYA,MAAM,CAAC/B,MAAD,CAAlB;AAAA,KAAP;AACH,GALiB,EAKf,CAACA,MAAD,CALe,CAAlB;;AAtBkB,sBA4BO5B,YAAY,CAACiD,OAAD,EAAUV,kBAAV,EAA8BmB,SAA9B,CA5BnB;AAAA;AAAA,MA4BXE,cA5BW,sBA6BlB;;;AACA,MAAMC,eAAe,GAAG,EAAxB;;AACA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAyB;AAAA,QAAlBC,KAAkB,uEAAV,KAAU;;AAC7C,QAAMC,UAAU,GAAG,SAAc,SAAc,EAAd,EAAkBJ,eAAlB,CAAd,EAAkDE,IAAlD,CAAnB;;AACA,QAAIC,KAAJ,EAAW;AACPH,MAAAA,eAAe,CAACK,eAAhB,GADO,CAEP;;AACA,UAAID,UAAU,CAACvC,UAAX,CAAsByC,OAA1B,EAAmC;AAC/BF,QAAAA,UAAU,CAACvC,UAAX,CAAsByC,OAAtB,GAAgC,CAAhC;AACH,OALM,CAMP;;;AACA,UAAIzC,UAAU,IAAIA,UAAU,CAACM,QAA7B,EAAuC;AACnCN,QAAAA,UAAU,CAACM,QAAX,CAAoB,CAApB,EAAuBiC,UAAU,CAACvC,UAAX,CAAsB0C,QAA7C;AACH;AACJ;;AACD,QAAI5B,MAAM,IAAIA,MAAM,CAAC6B,wBAAP,KAAoC,KAA9C,IAAuDd,YAAY,CAACC,IAAb,CAAkBW,OAA7E,EAAsF;AAClFzD,MAAAA,QAAQ,CAAC,CAAD,EAAI;AACR4D,QAAAA,YAAY,EAAE;AAAA,iBAAMf,YAAY,CAACC,IAAb,CAAkBW,OAAxB;AAAA;AADN,OAAJ,CAAR;AAGH;;AACD,QAAInC,QAAJ,EAAc;AACVA,MAAAA,QAAQ,CAACiC,UAAU,CAACvC,UAAZ,EAAwBuC,UAAU,CAACM,OAAnC,EAA4CN,UAAU,CAACO,MAAvD,EAA+D;AACnEC,QAAAA,iBAAiB,EAAElE,aAAa,CAACF,WAAW,CAAC4C,OAAD,EAAUgB,UAAU,CAACS,YAArB,EAAmCnC,kBAAnC,CAAZ,EAAoE0B,UAAU,CAACU,YAA/E;AADmC,OAA/D,CAAR;AAGH;AACJ,GAvBD;AAwBA;;;;;;AAMA;;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACJ,MAAD,EAASE,YAAT,EAA0B;AAC7CZ,IAAAA,eAAe,CAAC;AACZU,MAAAA,MAAM,EAANA,MADY;AAEZE,MAAAA,YAAY,EAAZA;AAFY,KAAD,EAGZ,KAHY,CAAf;AAIH,GALD;;AA9DkB,mBAoEyDtE,SAAS,CAAC;AACjFe,IAAAA,SAAS,EAATA,SADiF;AAEjFW,IAAAA,OAAO,EAAPA,OAFiF;AAGjFC,IAAAA,QAAQ,EAARA,QAHiF;AAIjF6C,IAAAA,cAAc,EAAdA,cAJiF;AAKjFnC,IAAAA,cAAc,EAAEA,cAAc,IAAI,CAAC,QAAD,EAAW,SAAX;AAL+C,GAAD,CApElE;AAAA;AAAA,MAoEXoC,sBApEW;AAAA,MAoEaC,UApEb;AAAA,MAoEyBC,gBApEzB;AAAA,MAoE2CC,UApE3C;;AA2ElB,MAAMC,UAAU,GAAG3F,KAAK,CAAC8D,OAAN,CAAc;AAAA,WAAM/C,WAAW,CAAC4C,OAAD,EAAU6B,UAAV,EAAsBvC,kBAAtB,CAAjB;AAAA,GAAd,EAA0E,CACzFU,OADyF,EAEzF6B,UAFyF,CAA1E,CAAnB;AAIAjB,EAAAA,eAAe,CAACW,MAAhB,GAAyBQ,UAAU,EAAnC;AACAnB,EAAAA,eAAe,CAACa,YAAhB,GAA+BI,UAA/B,CAhFkB,CAiFlB;;AACA,MAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACX,OAAD,EAAUI,YAAV,EAA2B;AAC9Cb,IAAAA,eAAe,CAAC;AACZS,MAAAA,OAAO,EAAPA,OADY;AAEZI,MAAAA,YAAY,EAAZA;AAFY,KAAD,EAGZ,IAHY,CAAf;AAIH,GALD;;AAlFkB,mBAwFyCrE,SAAS,CAAC;AACjEa,IAAAA,SAAS,EAATA,SADiE;AAEjEuB,IAAAA,MAAM,EAAEM,WAFyD;AAGjExB,IAAAA,iBAAiB,EAAjBA,iBAHiE;AAIjEM,IAAAA,OAAO,EAAEA,OAAO,IAAI,EAJ6C;AAKjEoD,IAAAA,cAAc,EAAdA,cALiE;AAMjEjD,IAAAA,iBAAiB,EAAjBA;AANiE,GAAD,CAxFlD;AAAA;AAAA,MAwFXkD,sBAxFW;AAAA,MAwFaR,YAxFb;AAAA,MAwF2BS,UAxF3B;;AAgGlB,MAAMC,UAAU,GAAG9E,aAAa,CAAC0E,UAAD,EAAaN,YAAb,CAAhC;AACAd,EAAAA,eAAe,CAACU,OAAhB,GAA0Ba,UAAU,EAApC;AACAvB,EAAAA,eAAe,CAACc,YAAhB,GAA+BA,YAA/B,CAlGkB,CAmGlB;;AACA,MAAMW,gBAAgB,GAAGhG,KAAK,CAAC8D,OAAN,CAAc;AAAA,WAAO,SAAc,EAAd,EAAkB2B,gBAAlB,CAAP;AAAA,GAAd,EAA2D,CAACA,gBAAD,CAA3D,CAAzB;;AApGkB,yBAqGcvE,eAAe,CAAC8E,gBAAD,CArG7B;AAAA;AAAA,MAqGXC,qBArGW,yBAsGlB;;;AACA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACrB,OAAD,EAAUC,QAAV,EAAuB;AAC9CN,IAAAA,eAAe,CAAC;AACZpC,MAAAA,UAAU,EAAE,SAAc,SAAc,EAAd,EAAkBmC,eAAe,CAACnC,UAAlC,CAAd,EAA6D;AAAEyC,QAAAA,OAAO,EAAPA,OAAF;AAAWC,QAAAA,QAAQ,EAARA;AAAX,OAA7D;AADA,KAAD,CAAf;AAGH,GAJD;;AAvGkB,uBA4G0BvE,aAAa,CAACwF,UAAU,CAACI,MAAZ,EAAoB/D,UAApB,EAAgC8D,kBAAhC,CA5GvC;AAAA;AAAA,MA4GXE,gBA5GW;AAAA,MA4GOxB,eA5GP;;AA6GlBL,EAAAA,eAAe,CAACnC,UAAhB,GACIA,UAAU,KAAK,KAAf,GAAuB,EAAvB,GAA4B3B,kBAAkB,CAAC2B,UAAD,EAAagE,gBAAb,CADlD;AAEA7B,EAAAA,eAAe,CAACK,eAAhB,GAAkCA,eAAlC,CA/GkB,CAgHlB;;AACA,MAAMyB,QAAQ,GAAGrG,KAAK,CAAC8D,OAAN,CAAc,YAAM;AACjC,QAAI1B,UAAU,KAAK,KAAf,IACA,CAACgE,gBAAgB,CAACtB,QADlB,IAEAiB,UAAU,CAACI,MAAX,GAAoBC,gBAAgB,CAACE,KAFzC,EAEgD;AAC5C,aAAOP,UAAP;AACH;;AALgC,gCAMqBK,gBANrB,CAMzBvB,OANyB;AAAA,QAMzBA,OANyB,sCAMf,CANe;AAAA,gCAMqBuB,gBANrB,CAMZtB,QANY;AAAA,QAMZA,QANY,sCAMDtE,iBANC;AAOjC,QAAM+F,eAAe,GAAGR,UAAU,CAACS,KAAX,CAAiB,CAAC3B,OAAO,GAAG,CAAX,IAAgBC,QAAjC,EAA2CD,OAAO,GAAGC,QAArD,CAAxB;AACA,WAAOyB,eAAP;AACH,GATgB,EASd,CACC,CAAC,CAACnE,UADH,EAEC2D,UAFD,EAGCK,gBAAgB,IAAIA,gBAAgB,CAACvB,OAHtC,EAICuB,gBAAgB,IAAIA,gBAAgB,CAACtB,QAJtC,EAKCsB,gBAAgB,IAAIA,gBAAgB,CAACE,KALtC,CATc,CAAjB,CAjHkB,CAiIlB;;AAjIkB,sBAkIkC3F,YAAY,CAAC0B,YAAD,EAAe;AAC3ER,IAAAA,SAAS,EAATA,SAD2E;AAE3E4E,IAAAA,IAAI,EAAEV,UAFqE;AAG3EM,IAAAA,QAAQ,EAARA,QAH2E;AAI3EjC,IAAAA,SAAS,EAATA,SAJ2E;AAK3EE,IAAAA,cAAc,EAAdA,cAL2E;AAM3ET,IAAAA,UAAU,EAAVA,UAN2E;AAO3EZ,IAAAA,kBAAkB,EAAlBA,kBAP2E;AAQ3EG,IAAAA,MAAM,EAAEM;AARmE,GAAf,CAlI9C;AAAA;AAAA,MAkIXgD,yBAlIW;AAAA,MAkIgBC,cAlIhB;;AA4IlB,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACvC,MAAD,EAASwC,KAAT,EAAgBC,MAAhB,EAA2B;AACpD,QAAIC,kBAAJ;;AACA,QAAI,OAAOxE,YAAP,KAAwB,UAA5B,EAAwC;AACpCwE,MAAAA,kBAAkB,GAAG9G,UAAU,CAACsC,YAAY,CAAC8B,MAAD,EAASwC,KAAT,EAAgBC,MAAhB,CAAb,CAA/B;AACH,KAFD,MAGK;AACDC,MAAAA,kBAAkB,GAAG9G,UAAU,CAACsC,YAAD,CAA/B;AACH;;AACD,WAAOtC,UAAU,+BACT4B,SADS,oBACkB8E,cAAc,CAACK,GAAf,CAAmB5C,SAAS,CAACC,MAAD,EAASwC,KAAT,CAA5B,CADlB,GAEdE,kBAFc,CAAjB;AAGH,GAXD,CA5IkB,CAwJlB;;;AACA,MAAME,gBAAgB,GAAG,SAAc,EAAd,EAAkBnE,UAAlB,CAAzB,CAzJkB,CA0JlB;;;AACAmE,EAAAA,gBAAgB,CAACC,sBAAjB,GAA0CD,gBAAgB,CAACpE,UAA3D,CA3JkB,CA4JlB;;AACAoE,EAAAA,gBAAgB,CAACpE,UAAjB,GACIoE,gBAAgB,CAACpE,UAAjB,IAA+BA,UAA/B,IAA6C1B,gBAAgB,CAACuC,WAAD,CADjE,CA7JkB,CA+JlB;;AACA,MAAIG,UAAU,KAAK,MAAf,IAAyB,EAAE,2BAA2BoD,gBAA7B,CAA7B,EAA6E;AACzEA,IAAAA,gBAAgB,CAACE,qBAAjB,GAAyC9E,YAAY,GAAG,CAAH,GAAO,CAA5D;AACH,GAlKiB,CAmKlB;;;AACA4E,EAAAA,gBAAgB,CAACjE,UAAjB,GAA8BiE,gBAAgB,CAACjE,UAAjB,IAA+BA,UAA/B,IAA6C,EAA3E,CApKkB,CAqKlB;;AACA,MAAMoE,gBAAgB,GAAGpH,KAAK,CAACqH,WAAN,CAAkB,UAACC,YAAD,EAAkB;AACzD,WAAOrB,qBAAqB,CAACS,yBAAyB,CAACb,sBAAsB,CAACN,sBAAsB,CAAC+B,YAAD,CAAvB,CAAvB,CAA1B,CAA5B;AACH,GAFwB,EAEtB,CAAC/B,sBAAD,EAAyBM,sBAAzB,EAAiDa,yBAAjD,CAFsB,CAAzB;AAGA,MAAIa,iBAAJ;AACA,MAAIC,oBAAJ;;AACA,MAAIpF,UAAU,KAAK,KAAnB,EAA0B;AACtB,QAAIqF,cAAJ;;AACA,QAAIrB,gBAAgB,CAACpE,IAArB,EAA2B;AACvByF,MAAAA,cAAc,GAAGrB,gBAAgB,CAACpE,IAAlC;AACH,KAFD,MAGK;AACDyF,MAAAA,cAAc,GAAGhE,UAAU,KAAK,OAAf,IAA0BA,UAAU,KAAK,QAAzC,GAAoD,OAApD,GAA8DiE,SAA/E;AACH;;AACD,QAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,aAAO,oBAAC,UAAD;AAAY,QAAA,SAAS,YAAK9F,SAAL;AAArB,SAAsDuE,gBAAtD;AAAwE,QAAA,IAAI,EAAEqB;AAA9E,SAAP;AAAA,KAAzB;;AACA,YAAQrB,gBAAgB,CAACwB,QAAzB;AACI,WAAK,KAAL;AACIL,QAAAA,iBAAiB,GAAGI,gBAAgB,EAApC;AACA;;AACJ,WAAK,MAAL;AACIJ,QAAAA,iBAAiB,GAAGI,gBAAgB,EAApC;AACAH,QAAAA,oBAAoB,GAAGG,gBAAgB,EAAvC;AACA;;AACJ;AACIH,QAAAA,oBAAoB,GAAGG,gBAAgB,EAAvC;AATR;AAWH,GA/LiB,CAgMlB;;;AACA,MAAIE,SAAJ;;AACA,MAAI,OAAOjF,OAAP,KAAmB,SAAvB,EAAkC;AAC9BiF,IAAAA,SAAS,GAAG;AACRC,MAAAA,QAAQ,EAAElF;AADF,KAAZ;AAGH,GAJD,MAKK;AACDiF,IAAAA,SAAS,GAAGjF,OAAZ;AACH;;AACD,MAAMmF,iBAAiB,GAAG9H,UAAU,WAAI4B,SAAJ,6CAC5BA,SAD4B,mBACF2B,SAAS,KAAK,KADZ,EAApC;AAGA,SAAQ;AAAK,IAAA,SAAS,EAAEuE,iBAAhB;AAAmC,IAAA,WAAW,EAAE,qBAAAC,CAAC,EAAI;AACzDA,MAAAA,CAAC,CAACC,cAAF;AACH;AAFO,KAGN,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAE;AAAhB,KAA2BJ,SAA3B,GACGN,iBADH,EAEE,oBAAC,OAAD,eAAa5F,KAAb;AAAoB,IAAA,UAAU,EAAEsF,gBAAhC;AAAkD,IAAA,SAAS,EAAEpF,SAA7D;AAAwE,IAAA,SAAS,EAAE5B,UAAU,CAAC6B,SAAD,8DACzFD,SADyF,cACpE4B,UAAU,KAAK,QADqD,2CAEzF5B,SAFyF,aAErE4B,UAAU,KAAK,OAFsD,2CAGzF5B,SAHyF,gBAGlEI,QAHkE,2CAIzFJ,SAJyF,WAIvE2B,SAAS,KAAK,KAJyD,iBAA7F;AAKA,IAAA,IAAI,EAAE6C,QALN;AAKgB,IAAA,MAAM,EAAEjC,SALxB;AAKmC,IAAA,YAAY,EAAEwC,oBALjD;AAKuE,IAAA,SAAS,EAAGxD,MAAM,IAAIA,MAAM,CAAC8E,SAAlB,IAAgC3E,WAAW,CAAC,OAAD,CAL7H,CAMJ;AANI;AAOJ,IAAA,aAAa,EAAEpD,cAPX;AAO2B,IAAA,YAAY,EAAE8D,YAPzC;AAOuD,IAAA,gBAAgB,EAAEmD;AAPzE,KAFF,EAUGI,oBAVH,CAHM,CAAR;AAgBH;;AACD9F,KAAK,CAACyG,YAAN,GAAqB;AACjB7F,EAAAA,MAAM,EAAE;AADS,CAArB;AAGAZ,KAAK,CAACd,aAAN,GAAsBA,aAAtB;AACAc,KAAK,CAACb,gBAAN,GAAyBA,gBAAzB;AACAa,KAAK,CAACH,MAAN,GAAeA,MAAf;AACAG,KAAK,CAACF,WAAN,GAAoBA,WAApB;AACA,eAAeE,KAAf","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport RcTable from 'rc-table';\nimport { INTERNAL_HOOKS } from 'rc-table/lib/Table';\nimport Spin from '../spin';\nimport Pagination from '../pagination';\nimport { ConfigContext } from '../config-provider/context';\nimport usePagination, { DEFAULT_PAGE_SIZE, getPaginationParam } from './hooks/usePagination';\nimport useLazyKVMap from './hooks/useLazyKVMap';\nimport useSelection, { SELECTION_ALL, SELECTION_INVERT } from './hooks/useSelection';\nimport useSorter, { getSortData } from './hooks/useSorter';\nimport useFilter, { getFilterData } from './hooks/useFilter';\nimport useTitleColumns from './hooks/useTitleColumns';\nimport renderExpandIcon from './ExpandIcon';\nimport scrollTo from '../_util/scrollTo';\nimport defaultLocale from '../locale/en_US';\nimport SizeContext from '../config-provider/SizeContext';\nimport Column from './Column';\nimport ColumnGroup from './ColumnGroup';\nconst EMPTY_LIST = [];\nfunction Table(props) {\n    const { prefixCls: customizePrefixCls, className, size: customizeSize, bordered, dropdownPrefixCls, dataSource, pagination, rowSelection, rowKey, rowClassName, columns, children, onChange, getPopupContainer, loading, expandIcon, expandable, expandedRowRender, indentSize, childrenColumnName = 'children', scroll, sortDirections, locale, } = props;\n    const size = React.useContext(SizeContext);\n    const { locale: contextLocale = defaultLocale, renderEmpty, direction } = React.useContext(ConfigContext);\n    const mergedSize = customizeSize || size;\n    const tableLocale = Object.assign(Object.assign({}, contextLocale.Table), locale);\n    const rawData = dataSource || EMPTY_LIST;\n    const { getPrefixCls } = React.useContext(ConfigContext);\n    const prefixCls = getPrefixCls('table', customizePrefixCls);\n    const expandType = React.useMemo(() => {\n        if (rawData.some(item => item[childrenColumnName])) {\n            return 'nest';\n        }\n        if (expandedRowRender || (expandable && expandable.expandedRowRender)) {\n            return 'row';\n        }\n        return null;\n    }, [rawData]);\n    const internalRefs = {\n        body: React.useRef(),\n    };\n    // ============================ RowKey ============================\n    const getRowKey = React.useMemo(() => {\n        if (typeof rowKey === 'function') {\n            return rowKey;\n        }\n        return (record) => record[rowKey];\n    }, [rowKey]);\n    const [getRecordByKey] = useLazyKVMap(rawData, childrenColumnName, getRowKey);\n    // ============================ Events =============================\n    const changeEventInfo = {};\n    const triggerOnChange = (info, reset = false) => {\n        const changeInfo = Object.assign(Object.assign({}, changeEventInfo), info);\n        if (reset) {\n            changeEventInfo.resetPagination();\n            // Reset event param\n            if (changeInfo.pagination.current) {\n                changeInfo.pagination.current = 1;\n            }\n            // Trigger pagination events\n            if (pagination && pagination.onChange) {\n                pagination.onChange(1, changeInfo.pagination.pageSize);\n            }\n        }\n        if (scroll && scroll.scrollToFirstRowOnChange !== false && internalRefs.body.current) {\n            scrollTo(0, {\n                getContainer: () => internalRefs.body.current,\n            });\n        }\n        if (onChange) {\n            onChange(changeInfo.pagination, changeInfo.filters, changeInfo.sorter, {\n                currentDataSource: getFilterData(getSortData(rawData, changeInfo.sorterStates, childrenColumnName), changeInfo.filterStates),\n            });\n        }\n    };\n    /**\n     * Controlled state in `columns` is not a good idea that makes too many code (1000+ line?)\n     * to read state out and then put it back to title render.\n     * Move these code into `hooks` but still too complex.\n     * We should provides Table props like `sorter` & `filter` to handle control in next big version.\n     */\n    // ============================ Sorter =============================\n    const onSorterChange = (sorter, sorterStates) => {\n        triggerOnChange({\n            sorter,\n            sorterStates,\n        }, false);\n    };\n    const [transformSorterColumns, sortStates, sorterTitleProps, getSorters] = useSorter({\n        prefixCls,\n        columns,\n        children,\n        onSorterChange,\n        sortDirections: sortDirections || ['ascend', 'descend'],\n    });\n    const sortedData = React.useMemo(() => getSortData(rawData, sortStates, childrenColumnName), [\n        rawData,\n        sortStates,\n    ]);\n    changeEventInfo.sorter = getSorters();\n    changeEventInfo.sorterStates = sortStates;\n    // ============================ Filter ============================\n    const onFilterChange = (filters, filterStates) => {\n        triggerOnChange({\n            filters,\n            filterStates,\n        }, true);\n    };\n    const [transformFilterColumns, filterStates, getFilters] = useFilter({\n        prefixCls,\n        locale: tableLocale,\n        dropdownPrefixCls,\n        columns: columns || [],\n        onFilterChange,\n        getPopupContainer,\n    });\n    const mergedData = getFilterData(sortedData, filterStates);\n    changeEventInfo.filters = getFilters();\n    changeEventInfo.filterStates = filterStates;\n    // ============================ Column ============================\n    const columnTitleProps = React.useMemo(() => (Object.assign({}, sorterTitleProps)), [sorterTitleProps]);\n    const [transformTitleColumns] = useTitleColumns(columnTitleProps);\n    // ========================== Pagination ==========================\n    const onPaginationChange = (current, pageSize) => {\n        triggerOnChange({\n            pagination: Object.assign(Object.assign({}, changeEventInfo.pagination), { current, pageSize }),\n        });\n    };\n    const [mergedPagination, resetPagination] = usePagination(mergedData.length, pagination, onPaginationChange);\n    changeEventInfo.pagination =\n        pagination === false ? {} : getPaginationParam(pagination, mergedPagination);\n    changeEventInfo.resetPagination = resetPagination;\n    // ============================= Data =============================\n    const pageData = React.useMemo(() => {\n        if (pagination === false ||\n            !mergedPagination.pageSize ||\n            mergedData.length < mergedPagination.total) {\n            return mergedData;\n        }\n        const { current = 1, pageSize = DEFAULT_PAGE_SIZE } = mergedPagination;\n        const currentPageData = mergedData.slice((current - 1) * pageSize, current * pageSize);\n        return currentPageData;\n    }, [\n        !!pagination,\n        mergedData,\n        mergedPagination && mergedPagination.current,\n        mergedPagination && mergedPagination.pageSize,\n        mergedPagination && mergedPagination.total,\n    ]);\n    // ========================== Selections ==========================\n    const [transformSelectionColumns, selectedKeySet] = useSelection(rowSelection, {\n        prefixCls,\n        data: mergedData,\n        pageData,\n        getRowKey,\n        getRecordByKey,\n        expandType,\n        childrenColumnName,\n        locale: tableLocale,\n    });\n    const internalRowClassName = (record, index, indent) => {\n        let mergedRowClassName;\n        if (typeof rowClassName === 'function') {\n            mergedRowClassName = classNames(rowClassName(record, index, indent));\n        }\n        else {\n            mergedRowClassName = classNames(rowClassName);\n        }\n        return classNames({\n            [`${prefixCls}-row-selected`]: selectedKeySet.has(getRowKey(record, index)),\n        }, mergedRowClassName);\n    };\n    // ========================== Expandable ==========================\n    const mergedExpandable = Object.assign({}, expandable);\n    // Pass origin render status into `rc-table`, this can be removed when refactor with `rc-table`\n    mergedExpandable.__PARENT_RENDER_ICON__ = mergedExpandable.expandIcon;\n    // Customize expandable icon\n    mergedExpandable.expandIcon =\n        mergedExpandable.expandIcon || expandIcon || renderExpandIcon(tableLocale);\n    // Adjust expand icon index, no overwrite expandIconColumnIndex if set.\n    if (expandType === 'nest' && !('expandIconColumnIndex' in mergedExpandable)) {\n        mergedExpandable.expandIconColumnIndex = rowSelection ? 1 : 0;\n    }\n    // Indent size\n    mergedExpandable.indentSize = mergedExpandable.indentSize || indentSize || 15;\n    // ============================ Render ============================\n    const transformColumns = React.useCallback((innerColumns) => {\n        return transformTitleColumns(transformSelectionColumns(transformFilterColumns(transformSorterColumns(innerColumns))));\n    }, [transformSorterColumns, transformFilterColumns, transformSelectionColumns]);\n    let topPaginationNode;\n    let bottomPaginationNode;\n    if (pagination !== false) {\n        let paginationSize;\n        if (mergedPagination.size) {\n            paginationSize = mergedPagination.size;\n        }\n        else {\n            paginationSize = mergedSize === 'small' || mergedSize === 'middle' ? 'small' : undefined;\n        }\n        const renderPagination = () => (<Pagination className={`${prefixCls}-pagination`} {...mergedPagination} size={paginationSize}/>);\n        switch (mergedPagination.position) {\n            case 'top':\n                topPaginationNode = renderPagination();\n                break;\n            case 'both':\n                topPaginationNode = renderPagination();\n                bottomPaginationNode = renderPagination();\n                break;\n            default:\n                bottomPaginationNode = renderPagination();\n        }\n    }\n    // >>>>>>>>> Spinning\n    let spinProps;\n    if (typeof loading === 'boolean') {\n        spinProps = {\n            spinning: loading,\n        };\n    }\n    else {\n        spinProps = loading;\n    }\n    const wrapperClassNames = classNames(`${prefixCls}-wrapper`, {\n        [`${prefixCls}-wrapper-rtl`]: direction === 'rtl',\n    });\n    return (<div className={wrapperClassNames} onTouchMove={e => {\n        e.preventDefault();\n    }}>\n      <Spin spinning={false} {...spinProps}>\n        {topPaginationNode}\n        <RcTable {...props} expandable={mergedExpandable} prefixCls={prefixCls} className={classNames(className, {\n        [`${prefixCls}-middle`]: mergedSize === 'middle',\n        [`${prefixCls}-small`]: mergedSize === 'small',\n        [`${prefixCls}-bordered`]: bordered,\n        [`${prefixCls}-rtl`]: direction === 'rtl',\n    })} data={pageData} rowKey={getRowKey} rowClassName={internalRowClassName} emptyText={(locale && locale.emptyText) || renderEmpty('Table')} \n    // Internal\n    internalHooks={INTERNAL_HOOKS} internalRefs={internalRefs} transformColumns={transformColumns}/>\n        {bottomPaginationNode}\n      </Spin>\n    </div>);\n}\nTable.defaultProps = {\n    rowKey: 'key',\n};\nTable.SELECTION_ALL = SELECTION_ALL;\nTable.SELECTION_INVERT = SELECTION_INVERT;\nTable.Column = Column;\nTable.ColumnGroup = ColumnGroup;\nexport default Table;\n"],"file":"Table.js"}