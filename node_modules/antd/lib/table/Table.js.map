{"version":3,"sources":["table/Table.jsx"],"names":["EMPTY_LIST","Table","props","customizePrefixCls","prefixCls","className","customizeSize","size","bordered","dropdownPrefixCls","dataSource","pagination","rowSelection","rowKey","rowClassName","columns","children","onChange","getPopupContainer","loading","expandIcon","expandable","expandedRowRender","indentSize","childrenColumnName","scroll","sortDirections","locale","React","useContext","SizeContext","ConfigContext","contextLocale","defaultLocale","renderEmpty","direction","mergedSize","tableLocale","rawData","getPrefixCls","expandType","useMemo","some","item","internalRefs","body","useRef","getRowKey","record","getRecordByKey","changeEventInfo","triggerOnChange","info","reset","changeInfo","resetPagination","current","pageSize","scrollToFirstRowOnChange","getContainer","filters","sorter","currentDataSource","sorterStates","filterStates","onSorterChange","transformSorterColumns","sortStates","sorterTitleProps","getSorters","sortedData","onFilterChange","transformFilterColumns","getFilters","mergedData","columnTitleProps","transformTitleColumns","onPaginationChange","length","mergedPagination","pageData","total","DEFAULT_PAGE_SIZE","currentPageData","slice","data","transformSelectionColumns","selectedKeySet","internalRowClassName","index","indent","mergedRowClassName","has","mergedExpandable","__PARENT_RENDER_ICON__","expandIconColumnIndex","transformColumns","useCallback","innerColumns","topPaginationNode","bottomPaginationNode","paginationSize","undefined","renderPagination","position","spinProps","spinning","wrapperClassNames","e","preventDefault","emptyText","INTERNAL_HOOKS","defaultProps","SELECTION_ALL","SELECTION_INVERT","Column","ColumnGroup"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;AACA,IAAMA,UAAU,GAAG,EAAnB;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAAA,MACCC,kBADD,GACmUD,KADnU,CACVE,SADU;AAAA,MACqBC,SADrB,GACmUH,KADnU,CACqBG,SADrB;AAAA,MACsCC,aADtC,GACmUJ,KADnU,CACgCK,IADhC;AAAA,MACqDC,QADrD,GACmUN,KADnU,CACqDM,QADrD;AAAA,MAC+DC,iBAD/D,GACmUP,KADnU,CAC+DO,iBAD/D;AAAA,MACkFC,UADlF,GACmUR,KADnU,CACkFQ,UADlF;AAAA,MAC8FC,UAD9F,GACmUT,KADnU,CAC8FS,UAD9F;AAAA,MAC0GC,YAD1G,GACmUV,KADnU,CAC0GU,YAD1G;AAAA,MACwHC,MADxH,GACmUX,KADnU,CACwHW,MADxH;AAAA,MACgIC,YADhI,GACmUZ,KADnU,CACgIY,YADhI;AAAA,MAC8IC,OAD9I,GACmUb,KADnU,CAC8Ia,OAD9I;AAAA,MACuJC,QADvJ,GACmUd,KADnU,CACuJc,QADvJ;AAAA,MACiKC,QADjK,GACmUf,KADnU,CACiKe,QADjK;AAAA,MAC2KC,iBAD3K,GACmUhB,KADnU,CAC2KgB,iBAD3K;AAAA,MAC8LC,OAD9L,GACmUjB,KADnU,CAC8LiB,OAD9L;AAAA,MACuMC,UADvM,GACmUlB,KADnU,CACuMkB,UADvM;AAAA,MACmNC,UADnN,GACmUnB,KADnU,CACmNmB,UADnN;AAAA,MAC+NC,iBAD/N,GACmUpB,KADnU,CAC+NoB,iBAD/N;AAAA,MACkPC,UADlP,GACmUrB,KADnU,CACkPqB,UADlP;AAAA,8BACmUrB,KADnU,CAC8PsB,kBAD9P;AAAA,MAC8PA,kBAD9P,sCACmR,UADnR;AAAA,MAC+RC,MAD/R,GACmUvB,KADnU,CAC+RuB,MAD/R;AAAA,MACuSC,cADvS,GACmUxB,KADnU,CACuSwB,cADvS;AAAA,MACuTC,MADvT,GACmUzB,KADnU,CACuTyB,MADvT;AAElB,MAAMpB,IAAI,GAAGqB,KAAK,CAACC,UAAN,CAAiBC,uBAAjB,CAAb;;AAFkB,0BAGwDF,KAAK,CAACC,UAAN,CAAiBE,sBAAjB,CAHxD;AAAA,gDAGVJ,MAHU;AAAA,MAGFK,aAHE,sCAGcC,iBAHd;AAAA,MAG6BC,WAH7B,qBAG6BA,WAH7B;AAAA,MAG0CC,SAH1C,qBAG0CA,SAH1C;;AAIlB,MAAMC,UAAU,GAAG9B,aAAa,IAAIC,IAApC;;AACA,MAAM8B,WAAW,GAAG,SAAc,SAAc,EAAd,EAAkBL,aAAa,CAAC/B,KAAhC,CAAd,EAAsD0B,MAAtD,CAApB;;AACA,MAAMW,OAAO,GAAG5B,UAAU,IAAIV,UAA9B;;AANkB,2BAOO4B,KAAK,CAACC,UAAN,CAAiBE,sBAAjB,CAPP;AAAA,MAOVQ,YAPU,sBAOVA,YAPU;;AAQlB,MAAMnC,SAAS,GAAGmC,YAAY,CAAC,OAAD,EAAUpC,kBAAV,CAA9B;AACA,MAAMqC,UAAU,GAAGZ,KAAK,CAACa,OAAN,CAAc,YAAM;AACnC,QAAIH,OAAO,CAACI,IAAR,CAAa,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACnB,kBAAD,CAAR;AAAA,KAAjB,CAAJ,EAAoD;AAChD,aAAO,MAAP;AACH;;AACD,QAAIF,iBAAiB,IAAKD,UAAU,IAAIA,UAAU,CAACC,iBAAnD,EAAuE;AACnE,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH,GARkB,EAQhB,CAACgB,OAAD,CARgB,CAAnB;AASA,MAAMM,YAAY,GAAG;AACjBC,IAAAA,IAAI,EAAEjB,KAAK,CAACkB,MAAN;AADW,GAArB,CAlBkB,CAqBlB;;AACA,MAAMC,SAAS,GAAGnB,KAAK,CAACa,OAAN,CAAc,YAAM;AAClC,QAAI,OAAO5B,MAAP,KAAkB,UAAtB,EAAkC;AAC9B,aAAOA,MAAP;AACH;;AACD,WAAO,UAACmC,MAAD;AAAA,aAAYA,MAAM,CAACnC,MAAD,CAAlB;AAAA,KAAP;AACH,GALiB,EAKf,CAACA,MAAD,CALe,CAAlB;;AAtBkB,sBA4BO,+BAAayB,OAAb,EAAsBd,kBAAtB,EAA0CuB,SAA1C,CA5BP;AAAA;AAAA,MA4BXE,cA5BW,sBA6BlB;;;AACA,MAAMC,eAAe,GAAG,EAAxB;;AACA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAyB;AAAA,QAAlBC,KAAkB,uEAAV,KAAU;;AAC7C,QAAMC,UAAU,GAAG,SAAc,SAAc,EAAd,EAAkBJ,eAAlB,CAAd,EAAkDE,IAAlD,CAAnB;;AACA,QAAIC,KAAJ,EAAW;AACPH,MAAAA,eAAe,CAACK,eAAhB,GADO,CAEP;;AACA,UAAID,UAAU,CAAC3C,UAAX,CAAsB6C,OAA1B,EAAmC;AAC/BF,QAAAA,UAAU,CAAC3C,UAAX,CAAsB6C,OAAtB,GAAgC,CAAhC;AACH,OALM,CAMP;;;AACA,UAAI7C,UAAU,IAAIA,UAAU,CAACM,QAA7B,EAAuC;AACnCN,QAAAA,UAAU,CAACM,QAAX,CAAoB,CAApB,EAAuBqC,UAAU,CAAC3C,UAAX,CAAsB8C,QAA7C;AACH;AACJ;;AACD,QAAIhC,MAAM,IAAIA,MAAM,CAACiC,wBAAP,KAAoC,KAA9C,IAAuDd,YAAY,CAACC,IAAb,CAAkBW,OAA7E,EAAsF;AAClF,gCAAS,CAAT,EAAY;AACRG,QAAAA,YAAY,EAAE;AAAA,iBAAMf,YAAY,CAACC,IAAb,CAAkBW,OAAxB;AAAA;AADN,OAAZ;AAGH;;AACD,QAAIvC,QAAJ,EAAc;AACVA,MAAAA,QAAQ,CAACqC,UAAU,CAAC3C,UAAZ,EAAwB2C,UAAU,CAACM,OAAnC,EAA4CN,UAAU,CAACO,MAAvD,EAA+D;AACnEC,QAAAA,iBAAiB,EAAE,+BAAc,6BAAYxB,OAAZ,EAAqBgB,UAAU,CAACS,YAAhC,EAA8CvC,kBAA9C,CAAd,EAAiF8B,UAAU,CAACU,YAA5F;AADgD,OAA/D,CAAR;AAGH;AACJ,GAvBD;AAwBA;;;;;;AAMA;;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACJ,MAAD,EAASE,YAAT,EAA0B;AAC7CZ,IAAAA,eAAe,CAAC;AACZU,MAAAA,MAAM,EAANA,MADY;AAEZE,MAAAA,YAAY,EAAZA;AAFY,KAAD,EAGZ,KAHY,CAAf;AAIH,GALD;;AA9DkB,mBAoEyD,4BAAU;AACjF3D,IAAAA,SAAS,EAATA,SADiF;AAEjFW,IAAAA,OAAO,EAAPA,OAFiF;AAGjFC,IAAAA,QAAQ,EAARA,QAHiF;AAIjFiD,IAAAA,cAAc,EAAdA,cAJiF;AAKjFvC,IAAAA,cAAc,EAAEA,cAAc,IAAI,CAAC,QAAD,EAAW,SAAX;AAL+C,GAAV,CApEzD;AAAA;AAAA,MAoEXwC,sBApEW;AAAA,MAoEaC,UApEb;AAAA,MAoEyBC,gBApEzB;AAAA,MAoE2CC,UApE3C;;AA2ElB,MAAMC,UAAU,GAAG1C,KAAK,CAACa,OAAN,CAAc;AAAA,WAAM,6BAAYH,OAAZ,EAAqB6B,UAArB,EAAiC3C,kBAAjC,CAAN;AAAA,GAAd,EAA0E,CACzFc,OADyF,EAEzF6B,UAFyF,CAA1E,CAAnB;AAIAjB,EAAAA,eAAe,CAACW,MAAhB,GAAyBQ,UAAU,EAAnC;AACAnB,EAAAA,eAAe,CAACa,YAAhB,GAA+BI,UAA/B,CAhFkB,CAiFlB;;AACA,MAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACX,OAAD,EAAUI,YAAV,EAA2B;AAC9Cb,IAAAA,eAAe,CAAC;AACZS,MAAAA,OAAO,EAAPA,OADY;AAEZI,MAAAA,YAAY,EAAZA;AAFY,KAAD,EAGZ,IAHY,CAAf;AAIH,GALD;;AAlFkB,mBAwFyC,4BAAU;AACjE5D,IAAAA,SAAS,EAATA,SADiE;AAEjEuB,IAAAA,MAAM,EAAEU,WAFyD;AAGjE5B,IAAAA,iBAAiB,EAAjBA,iBAHiE;AAIjEM,IAAAA,OAAO,EAAEA,OAAO,IAAI,EAJ6C;AAKjEwD,IAAAA,cAAc,EAAdA,cALiE;AAMjErD,IAAAA,iBAAiB,EAAjBA;AANiE,GAAV,CAxFzC;AAAA;AAAA,MAwFXsD,sBAxFW;AAAA,MAwFaR,YAxFb;AAAA,MAwF2BS,UAxF3B;;AAgGlB,MAAMC,UAAU,GAAG,+BAAcJ,UAAd,EAA0BN,YAA1B,CAAnB;AACAd,EAAAA,eAAe,CAACU,OAAhB,GAA0Ba,UAAU,EAApC;AACAvB,EAAAA,eAAe,CAACc,YAAhB,GAA+BA,YAA/B,CAlGkB,CAmGlB;;AACA,MAAMW,gBAAgB,GAAG/C,KAAK,CAACa,OAAN,CAAc;AAAA,WAAO,SAAc,EAAd,EAAkB2B,gBAAlB,CAAP;AAAA,GAAd,EAA2D,CAACA,gBAAD,CAA3D,CAAzB;;AApGkB,yBAqGc,kCAAgBO,gBAAhB,CArGd;AAAA;AAAA,MAqGXC,qBArGW,yBAsGlB;;;AACA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACrB,OAAD,EAAUC,QAAV,EAAuB;AAC9CN,IAAAA,eAAe,CAAC;AACZxC,MAAAA,UAAU,EAAE,SAAc,SAAc,EAAd,EAAkBuC,eAAe,CAACvC,UAAlC,CAAd,EAA6D;AAAE6C,QAAAA,OAAO,EAAPA,OAAF;AAAWC,QAAAA,QAAQ,EAARA;AAAX,OAA7D;AADA,KAAD,CAAf;AAGH,GAJD;;AAvGkB,uBA4G0B,gCAAciB,UAAU,CAACI,MAAzB,EAAiCnE,UAAjC,EAA6CkE,kBAA7C,CA5G1B;AAAA;AAAA,MA4GXE,gBA5GW;AAAA,MA4GOxB,eA5GP;;AA6GlBL,EAAAA,eAAe,CAACvC,UAAhB,GACIA,UAAU,KAAK,KAAf,GAAuB,EAAvB,GAA4B,wCAAmBA,UAAnB,EAA+BoE,gBAA/B,CADhC;AAEA7B,EAAAA,eAAe,CAACK,eAAhB,GAAkCA,eAAlC,CA/GkB,CAgHlB;;AACA,MAAMyB,QAAQ,GAAGpD,KAAK,CAACa,OAAN,CAAc,YAAM;AACjC,QAAI9B,UAAU,KAAK,KAAf,IACA,CAACoE,gBAAgB,CAACtB,QADlB,IAEAiB,UAAU,CAACI,MAAX,GAAoBC,gBAAgB,CAACE,KAFzC,EAEgD;AAC5C,aAAOP,UAAP;AACH;;AALgC,gCAMqBK,gBANrB,CAMzBvB,OANyB;AAAA,QAMzBA,OANyB,sCAMf,CANe;AAAA,gCAMqBuB,gBANrB,CAMZtB,QANY;AAAA,QAMZA,QANY,sCAMDyB,iCANC;AAOjC,QAAMC,eAAe,GAAGT,UAAU,CAACU,KAAX,CAAiB,CAAC5B,OAAO,GAAG,CAAX,IAAgBC,QAAjC,EAA2CD,OAAO,GAAGC,QAArD,CAAxB;AACA,WAAO0B,eAAP;AACH,GATgB,EASd,CACC,CAAC,CAACxE,UADH,EAEC+D,UAFD,EAGCK,gBAAgB,IAAIA,gBAAgB,CAACvB,OAHtC,EAICuB,gBAAgB,IAAIA,gBAAgB,CAACtB,QAJtC,EAKCsB,gBAAgB,IAAIA,gBAAgB,CAACE,KALtC,CATc,CAAjB,CAjHkB,CAiIlB;;AAjIkB,sBAkIkC,+BAAarE,YAAb,EAA2B;AAC3ER,IAAAA,SAAS,EAATA,SAD2E;AAE3EiF,IAAAA,IAAI,EAAEX,UAFqE;AAG3EM,IAAAA,QAAQ,EAARA,QAH2E;AAI3EjC,IAAAA,SAAS,EAATA,SAJ2E;AAK3EE,IAAAA,cAAc,EAAdA,cAL2E;AAM3ET,IAAAA,UAAU,EAAVA,UAN2E;AAO3EhB,IAAAA,kBAAkB,EAAlBA,kBAP2E;AAQ3EG,IAAAA,MAAM,EAAEU;AARmE,GAA3B,CAlIlC;AAAA;AAAA,MAkIXiD,yBAlIW;AAAA,MAkIgBC,cAlIhB;;AA4IlB,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACxC,MAAD,EAASyC,KAAT,EAAgBC,MAAhB,EAA2B;AACpD,QAAIC,kBAAJ;;AACA,QAAI,OAAO7E,YAAP,KAAwB,UAA5B,EAAwC;AACpC6E,MAAAA,kBAAkB,GAAG,4BAAW7E,YAAY,CAACkC,MAAD,EAASyC,KAAT,EAAgBC,MAAhB,CAAvB,CAArB;AACH,KAFD,MAGK;AACDC,MAAAA,kBAAkB,GAAG,4BAAW7E,YAAX,CAArB;AACH;;AACD,WAAO,0DACCV,SADD,oBAC4BmF,cAAc,CAACK,GAAf,CAAmB7C,SAAS,CAACC,MAAD,EAASyC,KAAT,CAA5B,CAD5B,GAEJE,kBAFI,CAAP;AAGH,GAXD,CA5IkB,CAwJlB;;;AACA,MAAME,gBAAgB,GAAG,SAAc,EAAd,EAAkBxE,UAAlB,CAAzB,CAzJkB,CA0JlB;;;AACAwE,EAAAA,gBAAgB,CAACC,sBAAjB,GAA0CD,gBAAgB,CAACzE,UAA3D,CA3JkB,CA4JlB;;AACAyE,EAAAA,gBAAgB,CAACzE,UAAjB,GACIyE,gBAAgB,CAACzE,UAAjB,IAA+BA,UAA/B,IAA6C,4BAAiBiB,WAAjB,CADjD,CA7JkB,CA+JlB;;AACA,MAAIG,UAAU,KAAK,MAAf,IAAyB,EAAE,2BAA2BqD,gBAA7B,CAA7B,EAA6E;AACzEA,IAAAA,gBAAgB,CAACE,qBAAjB,GAAyCnF,YAAY,GAAG,CAAH,GAAO,CAA5D;AACH,GAlKiB,CAmKlB;;;AACAiF,EAAAA,gBAAgB,CAACtE,UAAjB,GAA8BsE,gBAAgB,CAACtE,UAAjB,IAA+BA,UAA/B,IAA6C,EAA3E,CApKkB,CAqKlB;;AACA,MAAMyE,gBAAgB,GAAGpE,KAAK,CAACqE,WAAN,CAAkB,UAACC,YAAD,EAAkB;AACzD,WAAOtB,qBAAqB,CAACU,yBAAyB,CAACd,sBAAsB,CAACN,sBAAsB,CAACgC,YAAD,CAAvB,CAAvB,CAA1B,CAA5B;AACH,GAFwB,EAEtB,CAAChC,sBAAD,EAAyBM,sBAAzB,EAAiDc,yBAAjD,CAFsB,CAAzB;AAGA,MAAIa,iBAAJ;AACA,MAAIC,oBAAJ;;AACA,MAAIzF,UAAU,KAAK,KAAnB,EAA0B;AACtB,QAAI0F,cAAJ;;AACA,QAAItB,gBAAgB,CAACxE,IAArB,EAA2B;AACvB8F,MAAAA,cAAc,GAAGtB,gBAAgB,CAACxE,IAAlC;AACH,KAFD,MAGK;AACD8F,MAAAA,cAAc,GAAGjE,UAAU,KAAK,OAAf,IAA0BA,UAAU,KAAK,QAAzC,GAAoD,OAApD,GAA8DkE,SAA/E;AACH;;AACD,QAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,aAAO,oBAAC,sBAAD;AAAY,QAAA,SAAS,YAAKnG,SAAL;AAArB,SAAsD2E,gBAAtD;AAAwE,QAAA,IAAI,EAAEsB;AAA9E,SAAP;AAAA,KAAzB;;AACA,YAAQtB,gBAAgB,CAACyB,QAAzB;AACI,WAAK,KAAL;AACIL,QAAAA,iBAAiB,GAAGI,gBAAgB,EAApC;AACA;;AACJ,WAAK,MAAL;AACIJ,QAAAA,iBAAiB,GAAGI,gBAAgB,EAApC;AACAH,QAAAA,oBAAoB,GAAGG,gBAAgB,EAAvC;AACA;;AACJ;AACIH,QAAAA,oBAAoB,GAAGG,gBAAgB,EAAvC;AATR;AAWH,GA/LiB,CAgMlB;;;AACA,MAAIE,SAAJ;;AACA,MAAI,OAAOtF,OAAP,KAAmB,SAAvB,EAAkC;AAC9BsF,IAAAA,SAAS,GAAG;AACRC,MAAAA,QAAQ,EAAEvF;AADF,KAAZ;AAGH,GAJD,MAKK;AACDsF,IAAAA,SAAS,GAAGtF,OAAZ;AACH;;AACD,MAAMwF,iBAAiB,GAAG,sCAAcvG,SAAd,6CAClBA,SADkB,mBACQ+B,SAAS,KAAK,KADtB,EAA1B;AAGA,SAAQ;AAAK,IAAA,SAAS,EAAEwE,iBAAhB;AAAmC,IAAA,WAAW,EAAE,qBAAAC,CAAC,EAAI;AACzDA,MAAAA,CAAC,CAACC,cAAF;AACH;AAFO,KAGN,oBAAC,gBAAD;AAAM,IAAA,QAAQ,EAAE;AAAhB,KAA2BJ,SAA3B,GACGN,iBADH,EAEE,oBAAC,mBAAD,eAAajG,KAAb;AAAoB,IAAA,UAAU,EAAE2F,gBAAhC;AAAkD,IAAA,SAAS,EAAEzF,SAA7D;AAAwE,IAAA,SAAS,EAAE,4BAAWC,SAAX,8DAC/ED,SAD+E,cAC1DgC,UAAU,KAAK,QAD2C,2CAE/EhC,SAF+E,aAE3DgC,UAAU,KAAK,OAF4C,2CAG/EhC,SAH+E,gBAGxDI,QAHwD,2CAI/EJ,SAJ+E,WAI7D+B,SAAS,KAAK,KAJ+C,iBAAnF;AAKA,IAAA,IAAI,EAAE6C,QALN;AAKgB,IAAA,MAAM,EAAEjC,SALxB;AAKmC,IAAA,YAAY,EAAEyC,oBALjD;AAKuE,IAAA,SAAS,EAAG7D,MAAM,IAAIA,MAAM,CAACmF,SAAlB,IAAgC5E,WAAW,CAAC,OAAD,CAL7H,CAMJ;AANI;AAOJ,IAAA,aAAa,EAAE6E,qBAPX;AAO2B,IAAA,YAAY,EAAEnE,YAPzC;AAOuD,IAAA,gBAAgB,EAAEoD;AAPzE,KAFF,EAUGI,oBAVH,CAHM,CAAR;AAgBH;;AACDnG,KAAK,CAAC+G,YAAN,GAAqB;AACjBnG,EAAAA,MAAM,EAAE;AADS,CAArB;AAGAZ,KAAK,CAACgH,aAAN,GAAsBA,4BAAtB;AACAhH,KAAK,CAACiH,gBAAN,GAAyBA,+BAAzB;AACAjH,KAAK,CAACkH,MAAN,GAAeA,kBAAf;AACAlH,KAAK,CAACmH,WAAN,GAAoBA,uBAApB;eACenH,K","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport RcTable from 'rc-table';\nimport { INTERNAL_HOOKS } from 'rc-table/lib/Table';\nimport Spin from '../spin';\nimport Pagination from '../pagination';\nimport { ConfigContext } from '../config-provider/context';\nimport usePagination, { DEFAULT_PAGE_SIZE, getPaginationParam } from './hooks/usePagination';\nimport useLazyKVMap from './hooks/useLazyKVMap';\nimport useSelection, { SELECTION_ALL, SELECTION_INVERT } from './hooks/useSelection';\nimport useSorter, { getSortData } from './hooks/useSorter';\nimport useFilter, { getFilterData } from './hooks/useFilter';\nimport useTitleColumns from './hooks/useTitleColumns';\nimport renderExpandIcon from './ExpandIcon';\nimport scrollTo from '../_util/scrollTo';\nimport defaultLocale from '../locale/en_US';\nimport SizeContext from '../config-provider/SizeContext';\nimport Column from './Column';\nimport ColumnGroup from './ColumnGroup';\nconst EMPTY_LIST = [];\nfunction Table(props) {\n    const { prefixCls: customizePrefixCls, className, size: customizeSize, bordered, dropdownPrefixCls, dataSource, pagination, rowSelection, rowKey, rowClassName, columns, children, onChange, getPopupContainer, loading, expandIcon, expandable, expandedRowRender, indentSize, childrenColumnName = 'children', scroll, sortDirections, locale, } = props;\n    const size = React.useContext(SizeContext);\n    const { locale: contextLocale = defaultLocale, renderEmpty, direction } = React.useContext(ConfigContext);\n    const mergedSize = customizeSize || size;\n    const tableLocale = Object.assign(Object.assign({}, contextLocale.Table), locale);\n    const rawData = dataSource || EMPTY_LIST;\n    const { getPrefixCls } = React.useContext(ConfigContext);\n    const prefixCls = getPrefixCls('table', customizePrefixCls);\n    const expandType = React.useMemo(() => {\n        if (rawData.some(item => item[childrenColumnName])) {\n            return 'nest';\n        }\n        if (expandedRowRender || (expandable && expandable.expandedRowRender)) {\n            return 'row';\n        }\n        return null;\n    }, [rawData]);\n    const internalRefs = {\n        body: React.useRef(),\n    };\n    // ============================ RowKey ============================\n    const getRowKey = React.useMemo(() => {\n        if (typeof rowKey === 'function') {\n            return rowKey;\n        }\n        return (record) => record[rowKey];\n    }, [rowKey]);\n    const [getRecordByKey] = useLazyKVMap(rawData, childrenColumnName, getRowKey);\n    // ============================ Events =============================\n    const changeEventInfo = {};\n    const triggerOnChange = (info, reset = false) => {\n        const changeInfo = Object.assign(Object.assign({}, changeEventInfo), info);\n        if (reset) {\n            changeEventInfo.resetPagination();\n            // Reset event param\n            if (changeInfo.pagination.current) {\n                changeInfo.pagination.current = 1;\n            }\n            // Trigger pagination events\n            if (pagination && pagination.onChange) {\n                pagination.onChange(1, changeInfo.pagination.pageSize);\n            }\n        }\n        if (scroll && scroll.scrollToFirstRowOnChange !== false && internalRefs.body.current) {\n            scrollTo(0, {\n                getContainer: () => internalRefs.body.current,\n            });\n        }\n        if (onChange) {\n            onChange(changeInfo.pagination, changeInfo.filters, changeInfo.sorter, {\n                currentDataSource: getFilterData(getSortData(rawData, changeInfo.sorterStates, childrenColumnName), changeInfo.filterStates),\n            });\n        }\n    };\n    /**\n     * Controlled state in `columns` is not a good idea that makes too many code (1000+ line?)\n     * to read state out and then put it back to title render.\n     * Move these code into `hooks` but still too complex.\n     * We should provides Table props like `sorter` & `filter` to handle control in next big version.\n     */\n    // ============================ Sorter =============================\n    const onSorterChange = (sorter, sorterStates) => {\n        triggerOnChange({\n            sorter,\n            sorterStates,\n        }, false);\n    };\n    const [transformSorterColumns, sortStates, sorterTitleProps, getSorters] = useSorter({\n        prefixCls,\n        columns,\n        children,\n        onSorterChange,\n        sortDirections: sortDirections || ['ascend', 'descend'],\n    });\n    const sortedData = React.useMemo(() => getSortData(rawData, sortStates, childrenColumnName), [\n        rawData,\n        sortStates,\n    ]);\n    changeEventInfo.sorter = getSorters();\n    changeEventInfo.sorterStates = sortStates;\n    // ============================ Filter ============================\n    const onFilterChange = (filters, filterStates) => {\n        triggerOnChange({\n            filters,\n            filterStates,\n        }, true);\n    };\n    const [transformFilterColumns, filterStates, getFilters] = useFilter({\n        prefixCls,\n        locale: tableLocale,\n        dropdownPrefixCls,\n        columns: columns || [],\n        onFilterChange,\n        getPopupContainer,\n    });\n    const mergedData = getFilterData(sortedData, filterStates);\n    changeEventInfo.filters = getFilters();\n    changeEventInfo.filterStates = filterStates;\n    // ============================ Column ============================\n    const columnTitleProps = React.useMemo(() => (Object.assign({}, sorterTitleProps)), [sorterTitleProps]);\n    const [transformTitleColumns] = useTitleColumns(columnTitleProps);\n    // ========================== Pagination ==========================\n    const onPaginationChange = (current, pageSize) => {\n        triggerOnChange({\n            pagination: Object.assign(Object.assign({}, changeEventInfo.pagination), { current, pageSize }),\n        });\n    };\n    const [mergedPagination, resetPagination] = usePagination(mergedData.length, pagination, onPaginationChange);\n    changeEventInfo.pagination =\n        pagination === false ? {} : getPaginationParam(pagination, mergedPagination);\n    changeEventInfo.resetPagination = resetPagination;\n    // ============================= Data =============================\n    const pageData = React.useMemo(() => {\n        if (pagination === false ||\n            !mergedPagination.pageSize ||\n            mergedData.length < mergedPagination.total) {\n            return mergedData;\n        }\n        const { current = 1, pageSize = DEFAULT_PAGE_SIZE } = mergedPagination;\n        const currentPageData = mergedData.slice((current - 1) * pageSize, current * pageSize);\n        return currentPageData;\n    }, [\n        !!pagination,\n        mergedData,\n        mergedPagination && mergedPagination.current,\n        mergedPagination && mergedPagination.pageSize,\n        mergedPagination && mergedPagination.total,\n    ]);\n    // ========================== Selections ==========================\n    const [transformSelectionColumns, selectedKeySet] = useSelection(rowSelection, {\n        prefixCls,\n        data: mergedData,\n        pageData,\n        getRowKey,\n        getRecordByKey,\n        expandType,\n        childrenColumnName,\n        locale: tableLocale,\n    });\n    const internalRowClassName = (record, index, indent) => {\n        let mergedRowClassName;\n        if (typeof rowClassName === 'function') {\n            mergedRowClassName = classNames(rowClassName(record, index, indent));\n        }\n        else {\n            mergedRowClassName = classNames(rowClassName);\n        }\n        return classNames({\n            [`${prefixCls}-row-selected`]: selectedKeySet.has(getRowKey(record, index)),\n        }, mergedRowClassName);\n    };\n    // ========================== Expandable ==========================\n    const mergedExpandable = Object.assign({}, expandable);\n    // Pass origin render status into `rc-table`, this can be removed when refactor with `rc-table`\n    mergedExpandable.__PARENT_RENDER_ICON__ = mergedExpandable.expandIcon;\n    // Customize expandable icon\n    mergedExpandable.expandIcon =\n        mergedExpandable.expandIcon || expandIcon || renderExpandIcon(tableLocale);\n    // Adjust expand icon index, no overwrite expandIconColumnIndex if set.\n    if (expandType === 'nest' && !('expandIconColumnIndex' in mergedExpandable)) {\n        mergedExpandable.expandIconColumnIndex = rowSelection ? 1 : 0;\n    }\n    // Indent size\n    mergedExpandable.indentSize = mergedExpandable.indentSize || indentSize || 15;\n    // ============================ Render ============================\n    const transformColumns = React.useCallback((innerColumns) => {\n        return transformTitleColumns(transformSelectionColumns(transformFilterColumns(transformSorterColumns(innerColumns))));\n    }, [transformSorterColumns, transformFilterColumns, transformSelectionColumns]);\n    let topPaginationNode;\n    let bottomPaginationNode;\n    if (pagination !== false) {\n        let paginationSize;\n        if (mergedPagination.size) {\n            paginationSize = mergedPagination.size;\n        }\n        else {\n            paginationSize = mergedSize === 'small' || mergedSize === 'middle' ? 'small' : undefined;\n        }\n        const renderPagination = () => (<Pagination className={`${prefixCls}-pagination`} {...mergedPagination} size={paginationSize}/>);\n        switch (mergedPagination.position) {\n            case 'top':\n                topPaginationNode = renderPagination();\n                break;\n            case 'both':\n                topPaginationNode = renderPagination();\n                bottomPaginationNode = renderPagination();\n                break;\n            default:\n                bottomPaginationNode = renderPagination();\n        }\n    }\n    // >>>>>>>>> Spinning\n    let spinProps;\n    if (typeof loading === 'boolean') {\n        spinProps = {\n            spinning: loading,\n        };\n    }\n    else {\n        spinProps = loading;\n    }\n    const wrapperClassNames = classNames(`${prefixCls}-wrapper`, {\n        [`${prefixCls}-wrapper-rtl`]: direction === 'rtl',\n    });\n    return (<div className={wrapperClassNames} onTouchMove={e => {\n        e.preventDefault();\n    }}>\n      <Spin spinning={false} {...spinProps}>\n        {topPaginationNode}\n        <RcTable {...props} expandable={mergedExpandable} prefixCls={prefixCls} className={classNames(className, {\n        [`${prefixCls}-middle`]: mergedSize === 'middle',\n        [`${prefixCls}-small`]: mergedSize === 'small',\n        [`${prefixCls}-bordered`]: bordered,\n        [`${prefixCls}-rtl`]: direction === 'rtl',\n    })} data={pageData} rowKey={getRowKey} rowClassName={internalRowClassName} emptyText={(locale && locale.emptyText) || renderEmpty('Table')} \n    // Internal\n    internalHooks={INTERNAL_HOOKS} internalRefs={internalRefs} transformColumns={transformColumns}/>\n        {bottomPaginationNode}\n      </Spin>\n    </div>);\n}\nTable.defaultProps = {\n    rowKey: 'key',\n};\nTable.SELECTION_ALL = SELECTION_ALL;\nTable.SELECTION_INVERT = SELECTION_INVERT;\nTable.Column = Column;\nTable.ColumnGroup = ColumnGroup;\nexport default Table;\n"],"file":"Table.js"}